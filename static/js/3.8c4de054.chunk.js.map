{"version":3,"sources":["Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Posts.module.css","Components/Profile/ProfileInfo/ProfileStatus.jsx","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Posts.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","userPhoto","Preloader","Posts","item","message","likes","MyPosts","memo","postsElements","posts","reverse","map","p","key","id","postsBlock","AddMessageReduxForm","onSubmit","values","onAddPost","newPostBody","Textarea","Attribute","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getProfile","getStatus","updatePhoto","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.8c4de054.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__lJq51\",\"img\":\"ProfileInfo_img__CjFce\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1aarJ\",\"posts\":\"MyPosts_posts__1yPQf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__3ALYg\"};","import React from \"react\";\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status:this.props.status\r\n    }\r\n    activateEditMode =() =>{\r\n        this.setState({\r\n            editMode : true\r\n        })\r\n}\r\n    deActivateEditMode =() =>{\r\n        this.setState({\r\n            editMode : false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    onStatusChange =(e) =>{\r\n        this.setState({\r\n            status:e.currentTarget.value\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n           if(prevProps.status !== this.props.status) {\r\n               this.setState({\r\n                   status: this.props.status\r\n               })\r\n           }\r\n        console.log(\"didUpdate\")\r\n    }\r\n\r\n    render() {\r\n        console.log(\"render\")\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"-------\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deActivateEditMode} value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n    useEffect(() =>{\r\n        setStatus(props.status)},\r\n            [props.status]\r\n    )\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{status || \"-------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onBlur={deActivateEditMode} onChange={onStatusChange}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/images/user.png\"\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile){\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n\r\n        <div>\r\n            <div>\r\n              {/*  <div className={s.img}>\r\n                    <img src={'https://dbijapkm3o6fj.cloudfront.net/resources/20611,1004,1,6,4,0,960,330/-3842-/20161013141806/image-gallery.jpeg'}/>\r\n                </div>*/}\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large!=null ? props.profile.photos.large : userPhoto } />\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from \"react\";\r\nimport s from './Posts.module.css'\r\n\r\nconst Posts = (props) => {\r\n\r\n    return <div className={s.item}>\r\n        <img src={'https://s3.amazonaws.com/liberty-uploads/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg'}/>\r\n        {props.message}\r\n        <div>\r\n            <span> Like</span> {props.likes}\r\n        </div>\r\n    </div>\r\n\r\n\r\n}\r\nexport default Posts","import React from \"react\";\nimport s from './MyPosts.module.css'\nimport Posts from \"./Post/Posts\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Attribute} from \"../../Common/FormsControls/FormsControls\";\n\n\nconst MyPosts = React.memo(props => {\n    let postsElements = [...props.posts].reverse().map(p => <Posts message={p.message} key={p.id} likes={p.likes}/>)\n\n    let addNewPost = (values) => {\n        props.onAddPost(values.newPostBody)\n    }\n    return (\n        <div className={s.postsBlock}>\n            <h3>my posts</h3>\n            <div>\n                <AddMessageReduxForm onSubmit={addNewPost}/>\n            </div>\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n\n})\n\nconst Textarea = Attribute(\"textarea\")\nconst maxLength10 = maxLengthCreator(10)\nconst AddPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea} name={\"newPostBody\"} placeholder={\"Enter new post\"}\n                       validate={[required,maxLength10]}/>\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n}\nconst AddMessageReduxForm = reduxForm({form: 'ProfileAddPostForm'})(AddPostForm)\n\nexport default MyPosts","import React from \"react\";\nimport {addPostActionCreator} from \"../../../Redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText : state.profilePage.newPostText\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return{\n        onAddPost : (newPostBody) =>{\n            dispatch(addPostActionCreator(newPostBody))\n        }\n    }\n}\n\nlet MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n    return <div>\n        <ProfileInfo profile ={props.profile} status={props.status} updateStatus={props.updateStatus} />\n        <MyPostsContainer  />\n    </div>\n}\nexport default Profile","import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getProfile, getStatus, updatePhoto, updateStatus} from \"../../Redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.authorizedUserId\n            if(!userId){\n                this.props.history.push(\"/login\")\n            }\n        }\n        this.props.getProfile(userId)\n        this.props.getStatus(userId)\n        this.props.updatePhoto()\n    }\n\n\n    render() {\n\n        return <Profile {...this.state} profile={this.props.profile} status={this.props.status}\n                        updateStatus={this.props.updateStatus}/>\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n})\n\nexport default compose(\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus,updatePhoto}),\n    withRouter\n)(ProfileContainer)"],"sourceRoot":""}