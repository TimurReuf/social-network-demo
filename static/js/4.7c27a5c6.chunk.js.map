{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialogs","active","src","img","to","name","Message","message","maxLength50","maxLengthCreator","Textarea","Attribute","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","validate","required","component","Dialogs","DialogsElements","dialogsPage","map","d","key","MessagesElements","messages","m","dialogsItems","values","addMessageActionCreator","newMessageBody","mapStateToProps","state","isAuth","auth","compose","connect","dispatch","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,uGCWnKC,EARI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAAQ,yBAAKC,UAAWC,IAAEC,QAAU,IAAKD,IAAEE,QACnC,yBAAKC,IAAKP,EAAMQ,MAChB,kBAAC,IAAD,CAASC,GAAIR,GAAOD,EAAMU,QCAvBC,EALC,SAACX,GACb,OACI,yBAAKG,UAAWC,IAAEQ,SAAUZ,EAAMY,U,kCCgCpCC,EAAcC,YAAiB,IAC/BC,EAAYC,YAAU,YAatBC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAZL,SAAClB,GACpB,OACI,0BAAMoB,SAAUpB,EAAMqB,cACtB,6BACI,kBAACC,EAAA,EAAD,CAAOC,YAAa,qBAAsBC,SAAU,CAACC,IAASZ,GAAca,UAAWX,EAAUL,KAAM,oBAE/G,6BACI,6CAOOiB,EA3CC,SAAC3B,GAEb,IAAI4B,EAAkB5B,EAAM6B,YAAYxB,QAAQyB,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMR,GAAI6B,EAAE7B,GAAI8B,IAAKD,EAAE7B,GAC/BM,IAAKuB,EAAEvB,SACxEyB,EAAmBjC,EAAM6B,YAAYK,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASoB,IAAKG,EAAEjC,QAM/F,OACI,6BACI,yBAAKC,UAAWC,IAAEC,SAEd,yBAAKF,UAAWC,IAAEgC,cACbR,GAEL,yBAAKzB,UAAWC,IAAE8B,UACbD,IAGT,yBAAK9B,UAAWC,IAAE8B,UAClB,kBAACjB,EAAD,CAAqBG,SAhBT,SAACiB,GACjBrC,EAAMsC,wBAAwBD,EAAOE,sB,wCCbzCC,EAAkB,SAACC,GAAD,MAAY,CAC9BC,OAAQD,EAAME,KAAKD,S,OCgBRE,sBACXC,aAdoB,SAACJ,GACrB,MAAO,CACHZ,YAAaY,EAAMZ,gBAGA,SAACiB,GACxB,MAAM,CACFR,wBAA0B,SAACC,GAC3BO,EAASR,YAAwBC,UDRT,SAACQ,GAAe,IACtCC,EADqC,uKAGnC,OAAIC,KAAKjD,MAAM0C,OACR,kBAACK,EAAcE,KAAKjD,OADG,kBAAC,IAAD,CAAUS,GAAI,eAHT,GACXyC,IAAMH,WAStC,OAFiCF,YAAQL,EAARK,CAAyBG,KCK/CJ,CAGbjB","file":"static/js/4.7c27a5c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__14zwm\",\"dialogsItems\":\"Dialogs_dialogsItems__33vi1\",\"active\":\"Dialogs_active__1EkEA\",\"messages\":\"Dialogs_messages__sn3p3\",\"message\":\"Dialogs_message__2G_UJ\"};","import s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (<div className={s.dialogs + ' ' +s.active}>\r\n            <img src={props.img}/>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogItem","import s from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\nexport default Message","import React from \"react\";\nimport s from './Dialogs.module.css'\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Attribute} from \"../Common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\n\n\n\nconst Dialogs = (props) => {\n\n    let DialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id}\n                                                                         img={d.img}/>);\n    let MessagesElements = props.dialogsPage.messages.map(m => <Message message={m.message} key={m.id}/>)\n\n    let addNewMassage = (values) => {\n        props.addMessageActionCreator(values.newMessageBody)\n    }\n\n    return (\n        <div>\n            <div className={s.dialogs}>\n\n                <div className={s.dialogsItems}>\n                    {DialogsElements}\n                </div>\n                <div className={s.messages}>\n                    {MessagesElements}\n                </div>\n            </div>\n            <div className={s.messages}>\n            <AddMessageReduxForm onSubmit={addNewMassage}/>\n            </div>\n        </div>\n    )\n}\nconst maxLength50 = maxLengthCreator(50)\nconst Textarea =  Attribute(\"textarea\")\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n        <div>\n            <Field placeholder={'Enter your message'} validate={[required,maxLength50]} component={Textarea} name =\"newMessageBody\"/>\n        </div>\n    <div>\n        <button>Send</button>\n    </div>\n        </form>\n)\n}\nconst AddMessageReduxForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\n\nexport default Dialogs","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let connectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return connectedRedirectComponent\r\n}","import React from \"react\";\nimport {addMessageActionCreator} from \"../../Redux/dialogs-reducer\";\nimport {connect} from \"react-redux\";\nimport Dialogs from \"./Dialogs\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nconst mapStateToProps = (state) =>{\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\nconst mapDispatchToProps = (dispatch) =>{\n    return{\n        addMessageActionCreator : (newMessageBody) => {\n        dispatch(addMessageActionCreator(newMessageBody))\n    }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps,mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)"],"sourceRoot":""}